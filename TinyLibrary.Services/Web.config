<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="apworksConfiguration" type="Apworks.Core.Config.ApworksConfigHandler, Apworks.Core"/>
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <connectionStrings>
    <add name="TinyLibraryContainer"
         connectionString="metadata=res://*/TinyLibrary.csdl|res://*/TinyLibrary.ssdl|res://*/TinyLibrary.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=(local)\SQLEXPRESS;Initial Catalog=TinyLibraryDB;Integrated Security=True;Pooling=False;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>

  <cachingConfiguration defaultCacheManager="IocContainerCacheManager">
    <cacheManagers>
      <add name="cacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
          expirationPollFrequencyInSeconds="3600" maximumElementsInCacheBeforeScavenging="1000"
          numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
          name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>

  <apworksConfiguration>
    <objectContainer provider="Apworks.IoC.Unity.UnityContainer, Apworks.IoC.Unity"/>
    <modelAssemblies>
      <modelAssembly name="TinyLibrary.DomainModel"/>
    </modelAssemblies>
    <caching>
      <cached key="Infrastructure.ObjectContainer" active="true" cacheManager="cacheManager"/>
      <cached key="Domain.Repository" active="true" cacheManager="cacheManager"/>
    </caching>
  </apworksConfiguration>

  <unity>
    <containers>
      <container>
        <types>
          <type type="Apworks.Domain.Repositories.IRepositoryTransactionContext, Apworks.Domain"
                mapTo="TinyLibrary.Repositories.EdmTransactionContext, TinyLibrary.Repositories">
          </type>
          
          <type type="Apworks.Domain.Repositories.IRepository`1[[TinyLibrary.Domain.Book, TinyLibrary.Domain]], Apworks.Domain"
                mapTo="TinyLibrary.Repositories.BookRepository, TinyLibrary.Repositories"/>
          
          <type type="Apworks.Domain.Repositories.IRepository`1[[TinyLibrary.Domain.Reader, TinyLibrary.Domain]], Apworks.Domain"
                mapTo="TinyLibrary.Repositories.ReaderRepository, TinyLibrary.Repositories"/>
          
          <type type="Apworks.Core.IIdentityGenerator, Apworks.Core"
                mapTo="Apworks.Core.GeneralGuidGenerator, Apworks.Core"/>
        </types>
      </container>
    </containers>
  </unity>
  
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
 <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
  
</configuration>
